package dao;

import dto.Wallet;
import exception.WalletException;

import java.sql.*;

public class WalletDaoJdbcImpl implements WalletDao{

    String jdbcUrl = "jdbc:postgresql://localhost:5432/WalletApplication";
    String username = "WalletApp";
    String password = "";
    @Override
    public Wallet addWallet(Wallet newWallet) throws WalletException {
        try (Connection con = DriverManager.getConnection(jdbcUrl,username,password);
             PreparedStatement pt = con.prepareStatement("Insert into Wallets values(?,?,?,? )")){
            pt.setInt(1,newWallet.getId());
            pt.setString(2,newWallet.getName());
            pt.setDouble(3,newWallet.getBalance());
            pt.setString(4,newWallet.getPassword());
            pt.execute();
            System.out.println("Added successfully");

        } catch (SQLException e) {
            e.getMessage();
        }
        return newWallet;
    }

    @Override
    public Wallet getWalletById(Integer walletId) throws WalletException {
        Wallet wallet = null;

        try (Connection con = DriverManager.getConnection(jdbcUrl,username,password);
             PreparedStatement pt = con.prepareStatement("SELECT * FROM Wallets WHERE id=?")) {
            pt.setInt(1, walletId);

            ResultSet rs = pt.executeQuery();
            rs.next();

            wallet = new Wallet(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getString(4));
            System.out.println("got successfully");
        } catch (SQLException e) {
            e.getMessage();
        }
        return wallet;
    }

    @Override
    public Wallet updateWallet(Wallet updateWallet) throws WalletException {
        Wallet wallet = null;

        try (Connection con = DriverManager.getConnection(jdbcUrl,username,password);
             PreparedStatement pt = con.prepareStatement("update Wallets set balance=? where id=?");
             PreparedStatement ptd = con.prepareStatement("SELECT * FROM Wallets WHERE id=?")){
            pt.setDouble(1,updateWallet.getBalance());
            pt.setInt(2,updateWallet.getId());
            pt.executeUpdate();
            System.out.println("updated");
            //updated wallet
            ptd.setInt(1,updateWallet.getId() );

            ResultSet rs = ptd.executeQuery();
            rs.next();

            wallet = new Wallet(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getString(4));

        } catch (SQLException e) {
            e.getMessage();
        }
        return wallet;
    }

    @Override
    public Wallet deleteWalletById(Integer walletID) throws WalletException {
        try (Connection con = DriverManager.getConnection(jdbcUrl,username,password);
             PreparedStatement pt = con.prepareStatement("Delete  FROM Wallets WHERE id=?")) {
            pt.setInt(1, walletID);
            pt.execute();
            System.out.println("Deleted successfully");
        } catch (SQLException e) {
            e.getMessage();
        }
        return null;
    }
}
